package com.doing.blog.mapper;

import com.doing.blog.model.Article;
import com.doing.blog.model.ArticleExample;
import java.util.List;
import java.util.Map;

import org.apache.ibatis.annotations.Param;

public interface ArticleMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table blog_article
     *
     * @mbggenerated Sat Aug 27 14:05:11 CST 2016
     */
    int countByExample(ArticleExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table blog_article
     *
     * @mbggenerated Sat Aug 27 14:05:11 CST 2016
     */
    int deleteByExample(ArticleExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table blog_article
     *
     * @mbggenerated Sat Aug 27 14:05:11 CST 2016
     */
    int deleteByPrimaryKey(Long articleId);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table blog_article
     *
     * @mbggenerated Sat Aug 27 14:05:11 CST 2016
     */
    int insert(Article record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table blog_article
     *
     * @mbggenerated Sat Aug 27 14:05:11 CST 2016
     */
    int insertSelective(Article record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table blog_article
     *
     * @mbggenerated Sat Aug 27 14:05:11 CST 2016
     */
    List<Article> selectByExampleWithBLOBs(ArticleExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table blog_article
     *
     * @mbggenerated Sat Aug 27 14:05:11 CST 2016
     */
    List<Article> selectByExample(ArticleExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table blog_article
     *
     * @mbggenerated Sat Aug 27 14:05:11 CST 2016
     */
    Article selectByPrimaryKey(Long articleId);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table blog_article
     *
     * @mbggenerated Sat Aug 27 14:05:11 CST 2016
     */
    int updateByExampleSelective(@Param("record") Article record, @Param("example") ArticleExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table blog_article
     *
     * @mbggenerated Sat Aug 27 14:05:11 CST 2016
     */
    int updateByExampleWithBLOBs(@Param("record") Article record, @Param("example") ArticleExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table blog_article
     *
     * @mbggenerated Sat Aug 27 14:05:11 CST 2016
     */
    int updateByExample(@Param("record") Article record, @Param("example") ArticleExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table blog_article
     *
     * @mbggenerated Sat Aug 27 14:05:11 CST 2016
     */
    int updateByPrimaryKeySelective(Article record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table blog_article
     *
     * @mbggenerated Sat Aug 27 14:05:11 CST 2016
     */
    int updateByPrimaryKeyWithBLOBs(Article record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table blog_article
     *
     * @mbggenerated Sat Aug 27 14:05:11 CST 2016
     */
    int updateByPrimaryKey(Article record);

    /**
     *
     * @param getPageBean 封装了排序字段。排序方式，查询值，分页值，分页页数
     * @return 管理员集的条数
     */
    public int countAll(Map<String,Object> getPageBean);

    /**
     *
     * @param getPageBean 封装了排序字段。排序方式，查询值，分页值，分页页数
     * @return 查询后的管理员集
     */
    public List<Article> selectAllArticle(Map<String,Object> getPageBean);

    /**
     * 查询所有的博客文章
     * @return
     */
    public List<Article> selectAll();

    /**
     * 查询指定id的博客文章关联查询管理员关联查询用户评论
     * @return
     */
    public Article selectArticleAdminUsercommentUserById(Long articleId);
}