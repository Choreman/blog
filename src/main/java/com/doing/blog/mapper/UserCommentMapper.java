package com.doing.blog.mapper;

import com.doing.blog.model.UserComment;
import com.doing.blog.model.UserCommentExample;
import java.util.List;
import org.apache.ibatis.annotations.Param;

public interface UserCommentMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_comment
     *
     * @mbggenerated Sun Aug 28 00:31:59 CST 2016
     */
    int countByExample(UserCommentExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_comment
     *
     * @mbggenerated Sun Aug 28 00:31:59 CST 2016
     */
    int deleteByExample(UserCommentExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_comment
     *
     * @mbggenerated Sun Aug 28 00:31:59 CST 2016
     */
    int deleteByPrimaryKey(Long ucommentId);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_comment
     *
     * @mbggenerated Sun Aug 28 00:31:59 CST 2016
     */
    int insert(UserComment record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_comment
     *
     * @mbggenerated Sun Aug 28 00:31:59 CST 2016
     */
    int insertSelective(UserComment record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_comment
     *
     * @mbggenerated Sun Aug 28 00:31:59 CST 2016
     */
    List<UserComment> selectByExampleWithBLOBs(UserCommentExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_comment
     *
     * @mbggenerated Sun Aug 28 00:31:59 CST 2016
     */
    List<UserComment> selectByExample(UserCommentExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_comment
     *
     * @mbggenerated Sun Aug 28 00:31:59 CST 2016
     */
    UserComment selectByPrimaryKey(Long ucommentId);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_comment
     *
     * @mbggenerated Sun Aug 28 00:31:59 CST 2016
     */
    int updateByExampleSelective(@Param("record") UserComment record, @Param("example") UserCommentExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_comment
     *
     * @mbggenerated Sun Aug 28 00:31:59 CST 2016
     */
    int updateByExampleWithBLOBs(@Param("record") UserComment record, @Param("example") UserCommentExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_comment
     *
     * @mbggenerated Sun Aug 28 00:31:59 CST 2016
     */
    int updateByExample(@Param("record") UserComment record, @Param("example") UserCommentExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_comment
     *
     * @mbggenerated Sun Aug 28 00:31:59 CST 2016
     */
    int updateByPrimaryKeySelective(UserComment record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_comment
     *
     * @mbggenerated Sun Aug 28 00:31:59 CST 2016
     */
    int updateByPrimaryKeyWithBLOBs(UserComment record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_comment
     *
     * @mbggenerated Sun Aug 28 00:31:59 CST 2016
     */
    int updateByPrimaryKey(UserComment record);

    /**
     * 根据博客文章查询相关的用户评论关联查询用户信息
     * @param articleId
     * @return
     */
    List<UserComment> selectUsercommentUserByArticleId(Long articleId);

    /**
     * 根据文章的id删除相应的用户评论
     * @return
     */
    int deleteUsercommentByArticleId(Long articleId);

}