<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.doing.blog.mapper.UserCommentMapper" >
  <resultMap id="BaseResultMap" type="com.doing.blog.model.UserComment" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sun Aug 28 00:31:59 CST 2016.
    -->
    <id column="ucomment_id" property="ucommentId" jdbcType="BIGINT" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="user_id" property="userId" jdbcType="BIGINT" />
    <result column="article_id" property="articleId" jdbcType="BIGINT" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.doing.blog.model.UserComment" extends="BaseResultMap" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sun Aug 28 00:31:59 CST 2016.
    -->
    <result column="content" property="content" jdbcType="LONGVARCHAR" />
  </resultMap>

  <!-- 查询用户评论关联查询用户的resultMap -->
  <resultMap id="UsercommentUser" type="com.doing.blog.model.UserComment" extends="ResultMapWithBLOBs">
    <!-- 配置映射的用户评论 -->
    <!-- 直接继承ResultMapWithBLOBs，可以得到用户评论的映射配置 -->

    <!-- 配置映射的用户信息 -->
    <association property="user" javaType="com.doing.blog.model.User">
      <id column="user_id" property="uId"/>
      <result column="login_name" property="loginName" />
      <result column="username" property="username" />
      <result column="password" property="password" />
      <result column="sex" property="sex" />
      <result column="birthday" property="birthday" />
      <result column="phone" property="phone" />
      <result column="create_date" property="createDate" />
      <result column="head_portrait" property="headPortrait"/>
    </association>
  </resultMap>

  <sql id="Example_Where_Clause" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sun Aug 28 00:31:59 CST 2016.
    -->
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sun Aug 28 00:31:59 CST 2016.
    -->
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sun Aug 28 00:31:59 CST 2016.
    -->
    ucomment_id, create_time, user_id, article_id
  </sql>
  <sql id="Blob_Column_List" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sun Aug 28 00:31:59 CST 2016.
    -->
    content
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="com.doing.blog.model.UserCommentExample" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sun Aug 28 00:31:59 CST 2016.
    -->
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from user_comment
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.doing.blog.model.UserCommentExample" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sun Aug 28 00:31:59 CST 2016.
    -->
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from user_comment
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Long" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sun Aug 28 00:31:59 CST 2016.
    -->
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from user_comment
    where ucomment_id = #{ucommentId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sun Aug 28 00:31:59 CST 2016.
    -->
    delete from user_comment
    where ucomment_id = #{ucommentId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.doing.blog.model.UserCommentExample" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sun Aug 28 00:31:59 CST 2016.
    -->
    delete from user_comment
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.doing.blog.model.UserComment" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sun Aug 28 00:31:59 CST 2016.
    -->
    insert into user_comment (ucomment_id, create_time, user_id, 
      article_id, content)
    values (#{ucommentId,jdbcType=BIGINT}, #{createTime,jdbcType=TIMESTAMP}, #{userId,jdbcType=BIGINT}, 
      #{articleId,jdbcType=BIGINT}, #{content,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.doing.blog.model.UserComment" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sun Aug 28 00:31:59 CST 2016.
    -->
    insert into user_comment
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="ucommentId != null" >
        ucomment_id,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="articleId != null" >
        article_id,
      </if>
      <if test="content != null" >
        content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="ucommentId != null" >
        #{ucommentId,jdbcType=BIGINT},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="articleId != null" >
        #{articleId,jdbcType=BIGINT},
      </if>
      <if test="content != null" >
        #{content,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.doing.blog.model.UserCommentExample" resultType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sun Aug 28 00:31:59 CST 2016.
    -->
    select count(*) from user_comment
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sun Aug 28 00:31:59 CST 2016.
    -->
    update user_comment
    <set >
      <if test="record.ucommentId != null" >
        ucomment_id = #{record.ucommentId,jdbcType=BIGINT},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.userId != null" >
        user_id = #{record.userId,jdbcType=BIGINT},
      </if>
      <if test="record.articleId != null" >
        article_id = #{record.articleId,jdbcType=BIGINT},
      </if>
      <if test="record.content != null" >
        content = #{record.content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sun Aug 28 00:31:59 CST 2016.
    -->
    update user_comment
    set ucomment_id = #{record.ucommentId,jdbcType=BIGINT},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      user_id = #{record.userId,jdbcType=BIGINT},
      article_id = #{record.articleId,jdbcType=BIGINT},
      content = #{record.content,jdbcType=LONGVARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sun Aug 28 00:31:59 CST 2016.
    -->
    update user_comment
    set ucomment_id = #{record.ucommentId,jdbcType=BIGINT},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      user_id = #{record.userId,jdbcType=BIGINT},
      article_id = #{record.articleId,jdbcType=BIGINT}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.doing.blog.model.UserComment" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sun Aug 28 00:31:59 CST 2016.
    -->
    update user_comment
    <set >
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="userId != null" >
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="articleId != null" >
        article_id = #{articleId,jdbcType=BIGINT},
      </if>
      <if test="content != null" >
        content = #{content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where ucomment_id = #{ucommentId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.doing.blog.model.UserComment" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sun Aug 28 00:31:59 CST 2016.
    -->
    update user_comment
    set create_time = #{createTime,jdbcType=TIMESTAMP},
      user_id = #{userId,jdbcType=BIGINT},
      article_id = #{articleId,jdbcType=BIGINT},
      content = #{content,jdbcType=LONGVARCHAR}
    where ucomment_id = #{ucommentId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.doing.blog.model.UserComment" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sun Aug 28 00:31:59 CST 2016.
    -->
    update user_comment
    set create_time = #{createTime,jdbcType=TIMESTAMP},
      user_id = #{userId,jdbcType=BIGINT},
      article_id = #{articleId,jdbcType=BIGINT}
    where ucomment_id = #{ucommentId,jdbcType=BIGINT}
  </update>

  <!-- 根据博客文章id来查询该文章的所有用户评论关联查询用户，并根据创建时间排序，DESC降序排列 -->
  <select id="selectUsercommentUserByArticleId" parameterType="java.lang.Long" resultMap="UsercommentUser">
    select user_comment.*,
          blog_user.u_id,
          blog_user.login_name,
          blog_user.username,
          blog_user.password,
          blog_user.sex,
          blog_user.birthday,
          blog_user.phone,
          blog_user.create_date,
          blog_user.head_portrait
		FROM user_comment
			LEFT JOIN blog_user on blog_user.u_id = user_comment.user_id
		WHERE user_comment.article_id = #{articleId}
		  ORDER BY create_time DESC
  </select>

  <!-- 根据文章id删除相应的用户评论 -->
  <delete id="deleteUsercommentByArticleId" parameterType="java.lang.Long" >
    delete from user_comment
    where article_id = #{articleId}
  </delete>
</mapper>